{"version":3,"sources":["components/todo-list/TodoList.js","components/todo-create/todoCreate.js","components/todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","console","log","dataTodos","map","todo","title","id","TodoCreate","useState","getInputTodo","setInputTodo","className","onSubmit","event","preventDefault","newTodo","Math","floor","random","onCreateTodo","type","value","onChange","target","Todo","getTodos","setTodos","concat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAceA,EAZE,SAACC,GAEd,OADAC,QAAQC,IAAIF,EAAMG,WAEd,6BACIH,EAAMG,UAAUC,KAAI,SAACC,GACjB,OAAO,6BAAmBA,EAAKC,OAAfD,EAAKE,UCwBtBC,G,MA5BI,SAACR,GAChB,MAAqCS,mBAAS,IAA9C,mBAAOC,EAAP,KAAqBC,EAArB,KAmBA,OACI,uBAAMC,UAAU,YAAYC,SAnBX,SAACC,GAClBA,EAAMC,iBAEN,IAAMC,EAAU,CACZT,GAAIU,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EACtCb,MAAOI,GAGXV,EAAMoB,aAAaJ,GAGnBL,EAAa,KAQb,UACI,uBAAOU,KAAK,OAAOC,MAAOZ,EAAca,SANxB,SAACT,GACrBH,EAAaG,EAAMU,OAAOF,OAC1BrB,QAAQC,IAAIQ,MAKR,wBAAQW,KAAK,SAAb,sBCCGI,EArBF,WACT,MAA6BhB,mBAAS,CAClC,CAACF,GAAI,EAAGD,MAAO,OACf,CAACC,GAAI,EAAGD,MAAO,SACf,CAACC,GAAI,EAAGD,MAAO,UAHnB,mBAAOoB,EAAP,KAAiBC,EAAjB,KAWA,OACI,gCACI,2CACA,cAAC,EAAD,CAAYP,aARI,SAACf,GACrBsB,EAASD,EAASE,OAAOvB,IACzBJ,QAAQC,IAAIwB,MAOR,cAAC,EAAD,CAAUvB,UAAWuB,QCXlBG,EARH,WACV,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6e3a4108.chunk.js","sourcesContent":["import './TodoList.css'\r\n\r\nconst TodoList = (props) => {\r\n    console.log(props.dataTodos);\r\n    return (\r\n        <ul>{\r\n            props.dataTodos.map((todo) => {\r\n                return <li key={todo.id}>{todo.title}</li>\r\n            })   \r\n            \r\n        }</ul>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './todoCreate.css';\r\nimport { useState } from 'react';\r\n\r\nconst TodoCreate = (props) => {\r\n    const [getInputTodo, setInputTodo] = useState('');\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        const newTodo = {\r\n            id: Math.floor(Math.random() * 100) + 1,\r\n            title: getInputTodo\r\n        }\r\n\r\n        props.onCreateTodo(newTodo)\r\n        // console.log(newTodo);\r\n\r\n        setInputTodo('')\r\n    }\r\n\r\n    const handleInputTodo = (event) => {\r\n        setInputTodo(event.target.value)\r\n        console.log(getInputTodo)\r\n    }\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={getInputTodo} onChange={handleInputTodo}/>\r\n            <button type=\"submit\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoCreate","import './Todo.css';\r\nimport { useState } from 'react';\r\nimport TodoList from \"../todo-list/TodoList\";\r\nimport TodoCreate from '../todo-create/todoCreate';\r\n\r\n\r\nconst Todo = () => {\r\n    const [getTodos, setTodos] = useState([\r\n        {id: 1, title: 'Eat'},\r\n        {id: 2, title: 'Sleep'},\r\n        {id: 3, title: 'Code'},\r\n    ])\r\n\r\n    const eventCreateTodo = (todo) => {\r\n        setTodos(getTodos.concat(todo))\r\n        console.log(getTodos)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Todo List</h3>\r\n            <TodoCreate onCreateTodo={eventCreateTodo}/>\r\n            <TodoList dataTodos={getTodos}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","import './App.css';\nimport Todo from \"./components/todo/Todo\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}